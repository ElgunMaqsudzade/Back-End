@model BlogVM
@{
    ViewData["Title"] = "Detail";
    int count = Model.Comments.Count();
    string url = "/Blog/";
}

<!-- Banner Area Start -->
@await Component.InvokeAsync("Banner", new { word = "Blog Details" })
<!-- Banner Area End -->
<!-- Blog Start -->
<div class="blog-details-area pt-150 pb-140">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="blog-details">
                    <div class="blog-details-img">
                        <img class="img-fluid" src="~/img/blog/@Model.BlogSimple.Image" alt="blog-details">
                    </div>
                    <div class="blog-details-content">
                        <h2>@Model.BlogSimple.Title </h2>
                        <h6>
                            By @Model.BlogSimple.Author / @Model.BlogSimple.CreateTime.ToString("d, MMMM yyyy") / <i class='fa fa-comments-o'></i> <span class="reply-count">@(count != 0?$"{count}": "")</span>
                        </h6>
                        @Html.Raw(Model.BlogSimple.BlogDetail.AboutContent)
                    </div>
                    <partial name="_CommentSectionPartial" for="@url" />
                    <div class="col-md-12">
                        <hr />
                        <div class="message-field">
                            @if (Model.Comments.Count() != 0)
                            {
                                @foreach (var c in Model.Comments)
                                {
                                    <partial name="_CommentPartial" for="@c" />
                                }
                            }
                        </div>
                        <input type="hidden" id="db-id" value="@Model.BlogSimple.Id" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                @await Component.InvokeAsync("Sidebar", new { location = "Blog" })
            </div>
        </div>
    </div>
</div>
<!-- Blog End -->